digraph G{

label     = "AST"
fontname  = "Cascadia code"
fontsize  = 30
labelloc  = t

node   [ fontname="Cascadia code" ]
	111		[ style = solid label = "START"  ];
	111 -> 109
	109		[ style = solid label = "Func_def"  ];
	109 -> 0
	0		[ style = solid label = "KEYWORD 
(def)" color = red shape = rectangle ];
	109 -> 6
	6		[ style = solid label = "Func_def"  ];
	6 -> 1
	1		[ style = solid label = "IDENTIFIER 
(main)" color = red shape = rectangle ];
	6 -> 4
	4		[ style = solid label = "Parantheses"  ];
	4 -> 2
	2		[ style = solid label = "DELIMITER 
(()" color = red shape = rectangle ];
	4 -> 3
	3		[ style = solid label = "DELIMITER 
())" color = red shape = rectangle ];
	6 -> 5
	5		[ style = solid label = "DELIMITER 
(:)" color = red shape = rectangle ];
	109 -> 108
	108		[ style = solid label = "Stmts"  ];
	108 -> 38
	38		[ style = solid label = "Expr_stmt"  ];
	38 -> 9
	9		[ style = solid label = "Identifier"  ];
	9 -> 7
	7		[ style = solid label = "IDENTIFIER 
(x)" color = red shape = rectangle ];
	9 -> 8
	8		[ style = solid label = "TYPE_HINT 
(:int)" color = red shape = rectangle ];
	38 -> 37
	37		[ style = solid label = "Expr_stmt"  ];
	37 -> 10
	10		[ style = solid label = "ASSIGNMENT_OP 
(=)" color = red shape = rectangle ];
	37 -> 33
	33		[ style = solid label = "Expressions"  ];
	33 -> 19
	19		[ style = solid label = "STRING_LITERAL 
(\"Hello\")" color = red shape = rectangle ];
	33 -> 32
	32		[ style = solid label = "Expressions"  ];
	32 -> 20
	20		[ style = solid label = "RELATIONAL_OP 
(>)" color = red shape = rectangle ];
	32 -> 26
	26		[ style = solid label = "STRING_LITERAL 
(\"Hello\")" color = red shape = rectangle ];
	108 -> 107
	107		[ style = solid label = "If_stmt"  ];
	107 -> 40
	40		[ style = solid label = "KEYWORD 
(if)" color = red shape = rectangle ];
	107 -> 51
	51		[ style = solid label = "Arguments"  ];
	51 -> 41
	41		[ style = solid label = "DELIMITER 
(()" color = red shape = rectangle ];
	51 -> 42
	42		[ style = solid label = "IDENTIFIER 
(x)" color = red shape = rectangle ];
	51 -> 43
	43		[ style = solid label = "DELIMITER 
())" color = red shape = rectangle ];
	107 -> 52
	52		[ style = solid label = "DELIMITER 
(:)" color = red shape = rectangle ];
	107 -> 73
	73		[ style = solid label = "Terms"  ];
	73 -> 60
	60		[ style = solid label = "IDENTIFIER 
(print)" color = red shape = rectangle ];
	73 -> 71
	71		[ style = solid label = "Arguments"  ];
	71 -> 61
	61		[ style = solid label = "DELIMITER 
(()" color = red shape = rectangle ];
	71 -> 62
	62		[ style = solid label = "STRING_LITERAL 
(\"True\")" color = red shape = rectangle ];
	71 -> 63
	63		[ style = solid label = "DELIMITER 
())" color = red shape = rectangle ];
	107 -> 106
	106		[ style = solid label = "elif_stmt"  ];
	106 -> 82
	82		[ style = solid label = "KEYWORD 
(else)" color = red shape = rectangle ];
	106 -> 83
	83		[ style = solid label = "DELIMITER 
(:)" color = red shape = rectangle ];
	106 -> 97
	97		[ style = solid label = "Terms"  ];
	97 -> 84
	84		[ style = solid label = "IDENTIFIER 
(print)" color = red shape = rectangle ];
	97 -> 95
	95		[ style = solid label = "Arguments"  ];
	95 -> 85
	85		[ style = solid label = "DELIMITER 
(()" color = red shape = rectangle ];
	95 -> 86
	86		[ style = solid label = "STRING_LITERAL 
(\"False\")" color = red shape = rectangle ];
	95 -> 87
	87		[ style = solid label = "DELIMITER 
())" color = red shape = rectangle ];
}