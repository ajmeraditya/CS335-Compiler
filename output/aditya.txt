temp:   
move8 16(%rbp) arr 
.t1 = 0
i = .t1
.t2 = 0
j = .t2
print, i int 
.t3 = 0
.t4 = 3
.t3 = .t3 - 1
.t5 = .t3
.label2:   
.t5 = .t5 + 1
.t6 = .t5 < .t4
if_false .t6 goto .label1
i = .t5
.t7 = 0
.t8 = 3
.t7 = .t7 - 1
.t9 = .t7
.label4:   
.t9 = .t9 + 1
.t10 = .t9 < .t8
if_false .t10 goto .label3
j = .t9
.t12 = j * 8
a = arr[.t12]
.t13 = 1
.t14 = j + .t13
.t16 = .t14 * 8
b = arr[.t16]
.t17 = a > b
if_false .t17 goto .label6
.t19 = j * 8
arr[.t19] = b
.t20 = 1
.t21 = j + .t20
.t23 = .t21 * 8
arr[.t23] = a
goto .label5  
.label6:   
.label5:   
goto .label4  
.label3:   
goto .label2  
.label1:   
ret   
main:   
.t24 = 3
.t25 = 2
.t26 = 1
.t27 = alloc_mem(32) 
.t28 = 0
.t27[.t28] = 3 
.t28 = .t28 + 8
.t27[.t28] = .t24 
.t28 = .t28 + 8
.t27[.t28] = .t25 
.t28 = .t28 + 8
.t27[.t28] = .t26 
.t28 = .t28 + 8
.t27 = .t27 + 8
data = .t27
#callnew   
push data  
call, temp  
move8 %rax .t29 
.t30 = 0
i = .t30
.t31 = 0
.t33 = .t31 * 8
print, data[.t33] int 
