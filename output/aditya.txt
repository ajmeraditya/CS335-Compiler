temp:   
move8 16(%rbp) arr 
.t1 = 0
i = .t1
.t2 = 0
j = .t2
.t3 = 10
n = .t3
.t4 = 0
.t4 = .t4 - 1
.t5 = .t4
.label2:   
.t5 = .t5 + 1
.t6 = .t5 < n
if_false .t6 goto .label1
i = .t5
.t7 = 0
.t7 = .t7 - 1
.t8 = .t7
.label4:   
.t8 = .t8 + 1
.t9 = .t8 < n
if_false .t9 goto .label3
j = .t8
.t11 = j * 8
a = arr[.t11]
.t12 = 1
.t13 = j + .t12
.t15 = .t13 * 8
b = arr[.t15]
.t16 = a > b
if_false .t16 goto .label6
.t18 = j * 8
arr[.t18] = b
.t19 = 1
.t20 = j + .t19
.t22 = .t20 * 8
arr[.t22] = a
goto .label5  
.label6:   
.label5:   
goto .label4  
.label3:   
goto .label2  
.label1:   
ret   
main:   
.t23 = 10
.t24 = 9
.t25 = 8
.t26 = 7
.t27 = 6
.t28 = 5
.t29 = 4
.t30 = 3
.t31 = 2
.t32 = 1
.t33 = alloc_mem(88) 
.t34 = 0
.t33[.t34] = 10 
.t34 = .t34 + 8
.t33[.t34] = .t23 
.t34 = .t34 + 8
.t33[.t34] = .t24 
.t34 = .t34 + 8
.t33[.t34] = .t25 
.t34 = .t34 + 8
.t33[.t34] = .t26 
.t34 = .t34 + 8
.t33[.t34] = .t27 
.t34 = .t34 + 8
.t33[.t34] = .t28 
.t34 = .t34 + 8
.t33[.t34] = .t29 
.t34 = .t34 + 8
.t33[.t34] = .t30 
.t34 = .t34 + 8
.t33[.t34] = .t31 
.t34 = .t34 + 8
.t33[.t34] = .t32 
.t34 = .t34 + 8
.t33 = .t33 + 8
data = .t33
#callnew   
push data  
call, temp  
move8 %rax .t35 
.t36 = 10
n = .t36
.t37 = 0
i = .t37
.t38 = 0
.t38 = .t38 - 1
.t39 = .t38
.label8:   
.t39 = .t39 + 1
.t40 = .t39 < n
if_false .t40 goto .label7
i = .t39
.t42 = i * 8
print, data[.t42] int 
goto .label8  
.label7:   
