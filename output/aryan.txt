bubbleSort:   
move8 16(%rbp) array 
.t1 = 0
i = .t1
.t2 = 0
j = .t2
.t3 = -8
.t4 = array[.t3]
.t5 = -1
.t6 = .t5
.label2:   
.t6 = .t6 + 1
.t7 = .t6 < .t4
if_false .t7 goto .label1
i = .t6
.t8 = False
swapped = .t8
.t9 = 0
.t10 = -8
.t11 = array[.t10]
.t12 = .t11 - i
.t13 = 1
.t14 = .t12 - .t13
.t9 = .t9 - 1
.t15 = .t9
.label4:   
.t15 = .t15 + 1
.t16 = .t15 < .t14
if_false .t16 goto .label3
j = .t15
.t18 = j * 8
.t19 = 1
.t20 = j + .t19
.t22 = .t20 * 8
.t23 = array[.t18] > array[.t22]
if_false .t23 goto .label6
.t25 = j * 8
temp = array[.t25]
.t27 = j * 8
.t28 = 1
.t29 = j + .t28
.t31 = .t29 * 8
array[.t27] = array[.t31]
.t32 = 1
.t33 = j + .t32
.t35 = .t33 * 8
array[.t35] = temp
.t36 = True
swapped = .t36
goto .label5  
.label6:   
.label5:   
goto .label4  
.label3:   
.t37 = not swapped
if_false .t37 goto .label8
goto .label7  
.label8:   
.label7:   
goto .label2  
.label1:   
ret   
main:   
.t38 = 2
.t39 = .t38 * -1
.t40 = 45
.t41 = 0
.t42 = 11
.t43 = 9
.t44 = .t43 * -1
.t45 = alloc_mem(48) 
.t46 = 0
.t45[.t46] = 5
.t46 = .t46 + 8
.t45[.t46] = .t39
.t46 = .t46 + 8
.t45[.t46] = .t40
.t46 = .t46 + 8
.t45[.t46] = .t41
.t46 = .t46 + 8
.t45[.t46] = .t42
.t46 = .t46 + 8
.t45[.t46] = .t44
.t46 = .t46 + 8
.t45 = .t45 + 8
data = .t45
#callnew   
push data  
call, bubbleSort  
move8 %rax .t47 
.t48 = "Sorted Array in Ascending Order:"
print, .t48 str 
.t49 = 0
i = .t49
.t50 = -8
.t51 = data[.t50]
.t52 = -1
.t53 = .t52
.label10:   
.t53 = .t53 + 1
.t54 = .t53 < .t51
if_false .t54 goto .label9
i = .t53
.t56 = i * 8
print, data[.t56] int 
goto .label10  
.label9:   
